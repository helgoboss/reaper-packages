<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="Helgoboss Projects">
    <category name="ReaLearn controller presets">
        <reapack name="midi-fighter-twister" type="data" desc="MIDI Fighter Twister">
            <version name="1.0.2" author="helgoboss">
                <source file="helgoboss/realearn/presets/controller/midi-fighter-twister.json">https://raw.githubusercontent.com/helgoboss/realearn/05cee8ba80cd76988e4ada61f3dfb5ef1b479381/resources/controllers/midi-fighter-twister.json</source>
                <changelog><![CDATA[- Fixed mappings for "Left 3" and "Right 3" buttons]]></changelog>
            </version>
            <version name="1.0.1" author="helgoboss">
                <source file="helgoboss/realearn/presets/controller/midi-fighter-twister.json">https://raw.githubusercontent.com/helgoboss/realearn/8e10620217c9a008f14857c2f3a7ebb2884fcf0b/resources/controllers/midi-fighter-twister.json</source>
            </version>
            <version name="1.0.0" author="helgoboss">
                <source file="helgoboss/realearn/presets/controller/midi-fighter-twister.json">https://raw.githubusercontent.com/helgoboss/realearn/d6be9c98a7bc9ace696e5e63423079ed5f6f34bf/resources/controllers/midi-fighter-twister.json</source>
            </version>
        </reapack>
        <reapack name="apc-key-25" type="data" desc="APC Key 25">
            <version name="1.0.1" author="helgoboss">
                <source file="helgoboss/realearn/presets/controller/apc-key-25.json">https://raw.githubusercontent.com/helgoboss/realearn/e733564b368ee077a56bbb40301baae3641884d8/resources/controllers/apc-key-25.json</source>
            </version>
            <version name="1.0.0" author="helgoboss">
                <source file="helgoboss/realearn/presets/controller/apc-key-25.json">https://raw.githubusercontent.com/helgoboss/realearn/d6be9c98a7bc9ace696e5e63423079ed5f6f34bf/resources/controllers/apc-key-25.json</source>
            </version>
        </reapack>
    </category>
    <category name="Extensions">
        <reapack name="ReaLearn-x64" type="extension" desc="ReaLearn: Improved MIDI learn with feedback">

            <version name="1.12.0-pre18" author="helgoboss" time="2021-01-26T12:00:00Z">
                <changelog><![CDATA[- Improved usability by always sorting groups alphabetically
- Improved usage of ReaLearn as monitoring FX by making parameter feedback and learning work (usually, REAPER extensions don't get notified of anything happening on the monitoring FX chain, but at least for ReaLearn parameter changes I managed to create a workaround ... which is good news especially for global conditional activation use cases)
- Improved user guide (related to keyboard input, monitoring FX and limitations of monitoring FX)
- Improved safety by warning whenever loading something made in a newer ReaLearn version than the current one (version number gets part of the preset data, that also paves the way for preset migration)
- Improved usability by not prompting user on group removal whether to delete mappings in group if the group is empty
- Fixed wrong reverse behavior in 'Normal' mode when target value range is non-symmetric (old presets will keep their wrong behavior in order to not break existing projects)
- Fixed bug when moving mapping to another group that caused the activation conditions to not immediately be reflected
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre18/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre18/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre18/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre16" author="helgoboss" time="2021-01-25T12:00:00Z">
                <changelog><![CDATA[- Added possibility to use preset "Reset to factory default" to clear all settings, groups and mappings (without changing the session ID)
- Added user guide sections "Tested controllers" and "Tutorials"
- Improved internal workings of background color stuff
- Improved usability by making "Absolute" the default invocation mode for actions, was "Trigger" before (this change could break some action mappings done with previous 1.12.0 prereleases)
- Improved "Length" sliders to work for "Incremental buttons" mode, too
- Fixed possible "Raw pointer..." error when using track selection targets
- Fixed possible "couldn't get FX param value..." error when using FX parameter target
- Fixed action invocation mode "trigger", which sometimes wouldn't fire
- Fixed misleading labels in mapping panel
- Fixed feedback when reverse enabled and target range non-symmetric
- Fixed bug with broken plug-ins that report parameter as discrete but with a nonsensical step size of zero
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre16/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre16/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre16/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre15" author="helgoboss" time="2021-01-20T12:00:00Z">
                <changelog><![CDATA[- Improved projection server so it can deal with spaces and special characters in preset file names and session IDs
- Fixed mapping row painting on Linux
- Fixed segmentation fault on Linux when loading ReaLearn after plug-in scan
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre15/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre15/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre15/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre14" author="helgoboss" time="2021-01-19T12:00:00Z">
                <changelog><![CDATA[- Added "Reload all" button for reloading all presets from preset files
- Improved user interface by making mapping rows less grey and adding some horizontal rules
- Fixed learning of virtual source if virtual source is fed by MIDI (N)RPN source
- Fixed bug that could cause target value to get stuck if step size too small when it could be avoided
- Fixed "BorrowMut" error and potential race conditions when "Allow live FX multiprocessing" enabled
- Fixed double-processing of MIDI messages when "MIDI control input" set to MIDI device
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre14/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre14/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre14/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre11" author="helgoboss" time="2021-01-16T12:00:00Z">
                <changelog><![CDATA[- Improved usability by including source character in mapping row source label (makes it easier to spot character guessing issues)
- Improved (N)RPN scanning to support popular controllers (such as Behringer BCR2000), prefer value-MSB-first now
- Fixed broken arrow symbols on Windows 7 (display rectangles instead of arrows)
- Fixed "Couldn't get preset count" error
- Fixed (N)RPN learning and consumption check
- Fixed wrong info that feedback not working for (N)RPN (it works!)
- Fixed "Track send pan" target (was confused with "Track send volume")
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre11/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre11/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre11/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre10" author="helgoboss" time="2021-01-13T12:00:00Z">
                <changelog><![CDATA[- Improved usability by making ReaLearn Companion Web App link more visible on Projection page
- Fixed occasional REAPER crash when removing ReaLearn instance
- Fixed non-greyed-out context menu entries on macOS and Linux
- Fixed possible error when removing ReaLearn instance
- Fixed auto correction for "Send feedback only if track armed"
- Fixed wording in mapping row panel context menu
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre10/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre10/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre10/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre9" author="helgoboss" time="2021-01-10T12:00:00Z">
                <changelog><![CDATA[- Added preset auto-loading depending on focused FX (!)
- Added possibility to assign mappings to different groups and set activation condition and control/feedback enable state for each group
- Added limited MIDI feedback support for MIDI CC actions (requires REAPER >= 6.19+dev1226)
- Added possibility again to enter values > 100x in Speed text field (useful e.g. when using relative encoders with some NI plug-ins that report continuous parameters with step sizes that are very low)
- Added performance measuring of ReaLearn control surface methods (including exposing metrics in Prometheus format)
- Improved source character guessing (yields best results when turning clockwise!)
- Improved learning of transport buttons (now prefers ReaLearn's built-in transport target over the corresponding REAPER actions)
- Improved usability by automatically clearing filters and search expression when adding a mapping (to make sure it's shown)
- Improved preset usability by asking user whether to automatically convert project-anchored targets to project-independent ones
- Fixed error when encountering MIDI device name with incorrectly encoded special characters
- Fixed error when encountering invalid MIDI messages (they are now ignored)
- Fixed possible crash when REAPER preference "Allow complete unload of VST plug-ins" is set (projection server now completely unloads and releases TCP ports when removing the last ReaLearn instance)
- Fixed serialization bug that caused source channel and number to be skipped from serialization and loaded as 0 instead of  (THIS MIGHT BREAK YOUR 1.12 PRERELEASE PRESETS/PROJECTS, SORRY! When loading with pre9, check if there are any sources that unwillingly contains &lt;Any> as channel or number, manually change it to 0 and save the project/preset!)
- Fixed bug that caused ReaLearn to stop working when project paused and ReaLearn track not armed
]]></changelog>

                <source platform="win64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-user-guide.pdf</source>
                <source platform="darwin64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-user-guide.pdf</source>
                <source platform="linux64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-user-guide.pdf</source>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre8" author="helgoboss" time="2020-12-25T12:00:00Z">
                <changelog><![CDATA[- Changed location of controller presets from REAPER_RESOURCE_PATH/Data/helgoboss/realearn/controllers to REAPER_RESOURCE_PATH/Data/helgoboss/realearn/presets/controller (If you built your own presets already, you need to move them! The ones delivered by ReaPack should be moved automatically when doing a ReaPack sync.)
- Added support for main presets (analogously to controller presets)
- Added batch-learning of multiple mappings (new button "Learn many")
- Added FX anchors (analogously to track anchors)
- Added new target FX option "&lt;Focused>" (analogously to track "&lt;Selected>")
- Improved usability by scrolling to newly added/duplicated mapping if necessary
- Improved usability by prompting user for confirmation before switching from no preset to some preset if there are mappings defined already
- Improved usability by also stopping source filter learning when clearing the source filter
- Improved usability disabling all control while learning a target (no more undesired target learning by moving an already assigned control, at least within one ReaLearn instance)
- Fixed bug that caused overscrolling when clicking on "Find in mapping list" button
- Fixed inconsistent feedback processing order (changes behavior of existing feedback transformation formulas if used in combination with source or target interval restrictions, so they might need some adjustment!)
]]></changelog>

                <source platform="win64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-user-guide.pdf</source>
                <source platform="darwin64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-user-guide.pdf</source>
                <source platform="linux64" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-user-guide.pdf</source>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre7" author="helgoboss" time="2020-12-14T12:00:00Z">
                <changelog><![CDATA[- Added possibility to let unmatched FX input MIDI events through even when using hardware input (the checkbox isn't greyed out anymore)
- Improved accessibility by fixing tab order, default buttons and initial focus (affects mapping panel only because REAPER doesn't seem to support tab control in the actual main FX window)
- Improved consistency by letting program numbers start at 0 (just a visual change)
- Improved versatility by increasing number of conditional-activation parameters to 100
- Improved quality assurance by adding a few integration tests (new developer action)
- Improved usability by making online and offline user guide accessible via context menu (plus some other links)
- Fixed error when choosing non-MSB controller for 14-bit CC sources (now silently converted to MSB controller)
- Fixed "Find in mapping list" not switching mapping compartment
- Fixed "Message: -1 is not a valid value" in a better way (translating negative values to zero instead of ignoring them)
- Fixed REAPER crash when using automation on ReaLearn conditional-activation parameters
- Fixed UI inconsistency by hiding track anchor dropdown if not relevant
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre7/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre7/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre7/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre6" author="helgoboss" time="2020-12-08T12:00:00Z">
                <changelog><![CDATA[- Added possibility to refer to a track via its name or position (as an alternative to the default of using its unique and stable ID) ← That's called track anchors, a powerful addition, if you ask me!
- Improved consistency by preventing the session ID to become non-unique as result of actively changing it via context menu
- Improved usability by making virtual target the default for new controller mappings
- Improved usability by making most confirmation and alert dialogs modal with respect to the ReaLearn window itself, not REAPER
- Fixed Windows 7 character issues in dropdown menus
- Fixed error message if track could not be found
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre6/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre6/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre6/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre5" author="helgoboss" time="2020-12-07T12:00:00Z">
                <changelog><![CDATA[- Added Linux build again
- Added two controller presets, downloadable via ReaPack (in this context, controller preset directory has been changed to Data/helgoboss/realearn/controllers)
- Improved usability by printing possible solutions when projection server could not be started
- Improved stability and portability by migrating from web view to opening the projection setup page in the user's browser
- Improved QR code detection results by increasing QR code size
- Fixed "is not a valid unit value" error (happened when reading volume values above the fader limit set in REAPER preferences)
- Fixed "negative MIDI frame offset" error (negative offsets are interpreted as zero now)
- Fixed "Message: assertion failed: Bpm::is_valid(value)" error (could happen when using controllers that send MIDI clock)
- Fixed "Message: -1 is not a valid value" error (caused by unexpected FX parameter change value)
- Fixed header panel context menu on macOS
- Fixed crash on macOS when pressing projection button (by replacing web view with browser)
- Fixed not showing QR code on Windows 7, probably because of old IE version
- Fixed failure when opening presets that don't yet contain activationType
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre5/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre5/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre5/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre4" author="helgoboss" time="2020-12-03T12:00:00Z">
                <changelog><![CDATA[- Added controller mapping feature (possibility to define controller-specific mappings, virtual sources and virtual targets)
- Added controller projection feature (by using the new ReaLearn Companion app)
- Added indication of scroll position and number of mappings
- Improved usability by rethinking the mapping mode concept (The mapping window section is now called "Tuning" instead of "Mode" because a mapping can now cope with both relative and absolute source values, no matter the mode! It just depends on whatever value type the source emits - relative or absolute values. From now on, the "Mode" just describes how to interpret incoming absolute values. This is a "mostly" backward-compatible change since it changes only behavior of mappings that didn't have an effect anyway till now because source value type and mode didn't match.)
- Improved usability by indicating mappings that are "off" by greying them out
- Improved resource usage by greatly reducing project file size, undo entry size and preset size
- Improve error logging (makes it easier to map debug symbols, on Windows at least)
- Fixed bug that caused initial parameter values to be sometimes ignored in conditional activation
- Fixed scrolling issues when mapping list filtered
- Fixed error message when trying to pick action
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre4/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre4/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre4/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0" author="helgoboss" time="2020-09-16T12:00:00Z">
                <changelog><![CDATA[- Added feature 'conditional activation' for (de)activating mappings based on parameter values
- Added transport target with proper feedback (play/pause, play/stop, record, repeat)
- Added option to send feedback after each control cycle
- Added possibility to further specify "Out of range" behavior (the new option "Min" is especially useful for mappings where a button sets a target to a specific constant value)
- Improved installation instructions and added controller tips to the documentation
- Improved usability by showing hierarchical folder structure in track dropdown
- Improved usability by asking user for confirmation before removing a mapping
- Improved usability by simplifying mapping window title
- Fixed strange and unreliable feedback if target min is equal to target max
- Fixed bug that caused "FX must have focus" to not work at all with floating windows and work incorrectly when in FX chain
- Fixed action targets reporting wrong character, leading to wrong auto correction behavior
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.11.0/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.11.0/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0-pre2" author="helgoboss" time="2020-09-01T12:00:00Z">
                <changelog><![CDATA[- Added transport target with proper feedback (play/pause, play/stop, record, repeat)
- Added option to send feedback after each control cycle
- Improved usability by showing hierarchical folder structure in track dropdown
- Improved usability by asking user for confirmation before removing a mapping
- Improved usability by simplifying mapping window title
- Fixed action targets reporting wrong character, leading to wrong auto correction behavior
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre2/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre2/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre2/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0-pre1" author="helgoboss" time="2020-08-28T12:00:00Z">
                <changelog><![CDATA[- Added feature 'conditional activation' for (de)activating mappings based on parameter values
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre1/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre1/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre1/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0" author="helgoboss" time="2020-08-27T12:00:00Z">
                <changelog><![CDATA[- Added Linux support
- Added target 'Selected track' for navigating within track list
- Added mapping name search
- Added support for non-latin characters (in mapping names and when showing track names)
- Added support for using ReaLearn as monitoring FX
- Added version and build information to UI
- Added possibility to quickly check what a certain knob/fader/encoder/switch actually controls, without actually changing target parameters (implemented by simply making source filter run until pressing 'Stop' and by not filtering unknown sources)
- Added feedback for target 'Track FX preset'
- Added possibility for relative mode to throttle/slow-down relative increments (the 'step count' sliders are now called 'speed', negative values represent throttling)
- Added possibility for absolute and toggle modes to distinguish between short/long button presses ('Length' slider allows you to define press durations on millisecond granularity - obviously works with momentary switches only)
- Added mapping option 'Prevent echo feedback' (good for motorized faders that don't like feedback while being moved)
- Added target 'Track FX all enable' (without feedback)
- Added feedback transformation for relative and toggle mode, too (because feedback is always absolute)
- Added possibility to access current target value in control transformation (initial value of y)
- Added feedback reset logic when source not in use anymore (e.g. sends 'zero' feedback value if mapping removed)
- Added developer action for resolving backtraces that just contain addresses (also stripped debug symbols from Linux release artifact)
- Added option to send MIDI feedback to 'FX output' instead of directly to MIDI hardware device
- Added button 'Log debug info' for printing some debug information on a terminal (not the REAPER console!)
- Improved error handling: Some possible smaller errors/misbehaviors where totally ignored in previous versions and therefore might have gone unnoticed. In this version, ReaLearn will print a bug report if it detects such a smaller error, exactly like it already did before with more serious errors. (ReaLearn follows a fail-fast approach in order to detect errors early instead of letting them introduce subtle and hard-to-analyze bugs.)
- Improved toggle mode by letting Source Min/Max clamp feedback value just like in other modes
- Improved 'Log debug info' by logging to REAPER console instead of terminal
- Improved behavior when using 'Learn source filter': Also indicate if a source has been touched that is not used in any mapping (by showing an empty mapping list)
- Improved UI for action target (now uses REAPER's built-in action picker)
- Improved duplicate naming ('Copy of ...')
- Improved UI by immediately reflecting track name changes
- Improved UI by using actual arrow symbols (macOS and Windows only)
- Improved UI by having better error window if clipboard import is wrong
- Improved UI by instantly updating mapping name and all other values changed via text input field while typing
- Improved feedback by keeping it more in sync with the mapping settings (e.g. also updates while changing target range)
- Improved relative mode by giving the 'step size' / 'step count' (now 'speed') controls an overhaul
- Improved usability by not letting target fields forget their values when switching type
- Included more diagnostic information in error log messages (debug info such as line numbers)
- Made a complete rewrite in Rust programming language
- Published as open source (available on GitHub)
- Fixed logic error after learning target on master track
- Fixed crashes on logic errors while executing VST plug-in callbacks. Now it just reports an error message instead of aborting REAPER.
- Fixed non-working 'Track must be selected' target condition
- Fixed non-moving slider when slider currently focused
- Fixed some FX parameter target bugs which caused ReaLearn to error on particular values
- Fixed another possible 'ghost session' bug (ReaLearn sticking around although already unloaded)
- Fixed non-working FX parameter selection
- Fixed sometimes not working FX parameter learn
- Fixed possible missing learn/feedback notification right after startup
- Fixed possible error message when using -inf dB
- Fixed bug that caused ReaLearn instance to stay around as a ghost even if already removed. That caused surprising issues e.g. complaints about a target parameter not being found which was not used at all.
- Fixed continuous MIDI feedback of automated FX parameter values, track send volume and track send pan. Now fires on real value changes only. It’s still possible that ReaLearn sends more feedback than necessary when having automation. This can happen if there are value changes but they are so small that they don’t have any effect on the feedback MIDI value (because MIDI feedback values have a very low resolution).)
- Fixed some random error messages when using FX parameter target with parameters that report step sizes
- Fixed crashes when removing plug-ins
- Fixed bug that caused feedback and learn not working with master track
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre8" author="helgoboss" time="2020-08-19T12:00:00Z">
                <changelog><![CDATA[- Added mapping option 'Prevent echo feedback' (good for motorized faders that don't like feedback while being moved)
- Improved error handling: Some possible smaller errors/misbehaviors where totally ignored in previous versions and therefore might have gone unnoticed. In this version, ReaLearn will print a bug report if it detects such a smaller error, exactly like it already did before with more serious errors. (ReaLearn follows a fail-fast approach in order to detect errors early instead of letting them introduce subtle and hard-to-analyze bugs.)
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre8/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre8/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre8/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre7" author="helgoboss" time="2020-07-29T12:00:00Z">
                <changelog><![CDATA[- Added target 'Track FX all enable' (without feedback)
- Added feedback transformation for relative and toggle mode, too (because feedback is always absolute)
- Added possibility to access current target value in control transformation (initial value of y)
- Improved toggle mode by letting Source Min/Max clamp feedback value just like in other modes
- Improved 'Log debug info' by logging to REAPER console instead of terminal
- Fixed logic error after learning target on master track
- Fixed crashes on logic errors while executing VST plug-in callbacks. Now it just reports an error message instead of aborting REAPER.
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre7/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre7/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre7/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre6" author="helgoboss" time="2020-07-13T12:00:00Z">
                <changelog><![CDATA[- Added feedback reset logic when source not in use anymore (e.g. sends 'zero' feedback value if mapping removed)
- Improved behavior when using 'Learn source filter': Also indicate if a source has been touched that is not used in any mapping (by showing an empty mapping list)
- Fixed non-working 'Track must be selected' target condition
- Fixed non-moving slider when slider currently focused
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre6/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre6/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre6/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre5" author="helgoboss" time="2020-06-29T12:00:00Z">
                <changelog><![CDATA[- Added developer action for resolving backtraces that just contain addresses (also stripped debug symbols from Linux release artifact)
- Fixed some FX parameter target bugs which caused ReaLearn to error on particular values
- Fixed another possible 'ghost session' bug (ReaLearn sticking around although already unloaded)
- Fixed non-working FX parameter selection
- Fixed sometimes not working FX parameter learn
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre5/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre5/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre5/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre4" author="helgoboss" time="2020-06-27T12:00:00Z">
                <changelog><![CDATA[- Added option to send MIDI feedback to 'FX output' instead of directly to MIDI hardware device
- Added button 'Log debug info' for printing some debug information on a terminal (not the REAPER console!)
- Fixed possible missing learn/feedback notification right after startup
- Fixed possible error message when using -inf dB
- Fixed bug that caused ReaLearn instance to stay around as a ghost even if already removed. That caused surprising issues e.g. complaints about a target parameter not being found which was not used at all.
- Fixed continuous MIDI feedback of automated FX parameter values, track send volume and track send pan. Now fires on real value changes only. It’s still possible that ReaLearn sends more feedback than necessary when having automation. This can happen if there are value changes but they are so small that they don’t have any effect on the feedback MIDI value (because MIDI feedback values have a very low resolution).)
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre4/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre4/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre4/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre3" author="helgoboss" time="2020-06-25T12:00:00Z">
                <changelog><![CDATA[- Fixed some random error messages when using FX parameter target with parameters that report step sizes
- Include more diagnostic information in error log messages (debug info such as line numbers)
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre3/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre3/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre3/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre2" author="helgoboss" time="2020-06-24T12:00:00Z">
                <changelog><![CDATA[- Made a complete rewrite in Rust programming language
- Published as open source (available on GitHub)
- Added Linux support
- Added target 'Selected track' for navigating within track list
- Added mapping name search
- Added support for non-latin characters (in mapping names and when showing track names)
- Added support for using ReaLearn as monitoring FX
- Added version and build information to UI
- Added possibility to quickly check what a certain knob/fader/encoder/switch actually controls, without actually changing target parameters (implemented by simply making source filter run until pressing 'Stop' and by not filtering unknown sources)
- Added feedback for target 'Track FX preset'
- Added possibility for relative mode to throttle/slow-down relative increments (the 'step count' sliders are now called 'speed', negative values represent throttling)
- Added possibility for absolute and toggle modes to distinguish between short/long button presses ('Length' slider allows you to define press durations on millisecond granularity - obviously works with momentary switches only)
- Improved UI for action target (now uses REAPER's built-in action picker)
- Improved duplicate naming ('Copy of ...')
- Improved UI by immediately reflecting track name changes
- Improved UI by using actual arrow symbols (macOS and Windows only)
- Improved UI by having better error window if clipboard import is wrong
- Improved UI by instantly updating mapping name and all other values changed via text input field while typing
- Improved feedback by keeping it more in sync with the mapping settings (e.g. also updates while changing target range)
- Improved relative mode by giving the 'step size' / 'step count' (now 'speed') controls an overhaul
- Improved usability by not letting target fields forget their values when switching type
- Fixed crashes when removing plug-ins
- Fixed bug that caused feedback and learn not working with master track
]]></changelog>

                <source platform="win64" file="FX/ReaLearn-x64.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre2/realearn-windows-x86_64.dll</source>
                <source platform="darwin64" file="FX/ReaLearn-x64.vst.dylib">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre2/realearn-macos-x86_64.vst.dylib</source>
                <source platform="linux64" file="FX/ReaLearn-x64.so">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre2/realearn-linux-x86_64.so</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


        </reapack>
        <reapack name="ReaLearn-x86" type="extension" desc="ReaLearn: Improved MIDI learn with feedback">

            <version name="1.12.0-pre18" author="helgoboss" time="2021-01-26T12:00:00Z">
                <changelog><![CDATA[- Improved usability by always sorting groups alphabetically
- Improved usage of ReaLearn as monitoring FX by making parameter feedback and learning work (usually, REAPER extensions don't get notified of anything happening on the monitoring FX chain, but at least for ReaLearn parameter changes I managed to create a workaround ... which is good news especially for global conditional activation use cases)
- Improved user guide (related to keyboard input, monitoring FX and limitations of monitoring FX)
- Improved safety by warning whenever loading something made in a newer ReaLearn version than the current one (version number gets part of the preset data, that also paves the way for preset migration)
- Improved usability by not prompting user on group removal whether to delete mappings in group if the group is empty
- Fixed wrong reverse behavior in 'Normal' mode when target value range is non-symmetric (old presets will keep their wrong behavior in order to not break existing projects)
- Fixed bug when moving mapping to another group that caused the activation conditions to not immediately be reflected
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre18/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre16" author="helgoboss" time="2021-01-25T12:00:00Z">
                <changelog><![CDATA[- Added possibility to use preset "Reset to factory default" to clear all settings, groups and mappings (without changing the session ID)
- Added user guide sections "Tested controllers" and "Tutorials"
- Improved internal workings of background color stuff
- Improved usability by making "Absolute" the default invocation mode for actions, was "Trigger" before (this change could break some action mappings done with previous 1.12.0 prereleases)
- Improved "Length" sliders to work for "Incremental buttons" mode, too
- Fixed possible "Raw pointer..." error when using track selection targets
- Fixed possible "couldn't get FX param value..." error when using FX parameter target
- Fixed action invocation mode "trigger", which sometimes wouldn't fire
- Fixed misleading labels in mapping panel
- Fixed feedback when reverse enabled and target range non-symmetric
- Fixed bug with broken plug-ins that report parameter as discrete but with a nonsensical step size of zero
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre16/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre15" author="helgoboss" time="2021-01-20T12:00:00Z">
                <changelog><![CDATA[- Improved projection server so it can deal with spaces and special characters in preset file names and session IDs
- Fixed mapping row painting on Linux
- Fixed segmentation fault on Linux when loading ReaLearn after plug-in scan
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre15/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre14" author="helgoboss" time="2021-01-19T12:00:00Z">
                <changelog><![CDATA[- Added "Reload all" button for reloading all presets from preset files
- Improved user interface by making mapping rows less grey and adding some horizontal rules
- Fixed learning of virtual source if virtual source is fed by MIDI (N)RPN source
- Fixed bug that could cause target value to get stuck if step size too small when it could be avoided
- Fixed "BorrowMut" error and potential race conditions when "Allow live FX multiprocessing" enabled
- Fixed double-processing of MIDI messages when "MIDI control input" set to MIDI device
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre14/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre11" author="helgoboss" time="2021-01-16T12:00:00Z">
                <changelog><![CDATA[- Improved usability by including source character in mapping row source label (makes it easier to spot character guessing issues)
- Improved (N)RPN scanning to support popular controllers (such as Behringer BCR2000), prefer value-MSB-first now
- Fixed broken arrow symbols on Windows 7 (display rectangles instead of arrows)
- Fixed "Couldn't get preset count" error
- Fixed (N)RPN learning and consumption check
- Fixed wrong info that feedback not working for (N)RPN (it works!)
- Fixed "Track send pan" target (was confused with "Track send volume")
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre11/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre10" author="helgoboss" time="2021-01-13T12:00:00Z">
                <changelog><![CDATA[- Improved usability by making ReaLearn Companion Web App link more visible on Projection page
- Fixed occasional REAPER crash when removing ReaLearn instance
- Fixed non-greyed-out context menu entries on macOS and Linux
- Fixed possible error when removing ReaLearn instance
- Fixed auto correction for "Send feedback only if track armed"
- Fixed wording in mapping row panel context menu
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre10/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre9" author="helgoboss" time="2021-01-10T12:00:00Z">
                <changelog><![CDATA[- Added preset auto-loading depending on focused FX (!)
- Added possibility to assign mappings to different groups and set activation condition and control/feedback enable state for each group
- Added limited MIDI feedback support for MIDI CC actions (requires REAPER >= 6.19+dev1226)
- Added possibility again to enter values > 100x in Speed text field (useful e.g. when using relative encoders with some NI plug-ins that report continuous parameters with step sizes that are very low)
- Added performance measuring of ReaLearn control surface methods (including exposing metrics in Prometheus format)
- Improved source character guessing (yields best results when turning clockwise!)
- Improved learning of transport buttons (now prefers ReaLearn's built-in transport target over the corresponding REAPER actions)
- Improved usability by automatically clearing filters and search expression when adding a mapping (to make sure it's shown)
- Improved preset usability by asking user whether to automatically convert project-anchored targets to project-independent ones
- Fixed error when encountering MIDI device name with incorrectly encoded special characters
- Fixed error when encountering invalid MIDI messages (they are now ignored)
- Fixed possible crash when REAPER preference "Allow complete unload of VST plug-ins" is set (projection server now completely unloads and releases TCP ports when removing the last ReaLearn instance)
- Fixed serialization bug that caused source channel and number to be skipped from serialization and loaded as 0 instead of  (THIS MIGHT BREAK YOUR 1.12 PRERELEASE PRESETS/PROJECTS, SORRY! When loading with pre9, check if there are any sources that unwillingly contains &lt;Any> as channel or number, manually change it to 0 and save the project/preset!)
- Fixed bug that caused ReaLearn to stop working when project paused and ReaLearn track not armed
]]></changelog>

                <source platform="win32" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-user-guide.pdf</source>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre9/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre8" author="helgoboss" time="2020-12-25T12:00:00Z">
                <changelog><![CDATA[- Changed location of controller presets from REAPER_RESOURCE_PATH/Data/helgoboss/realearn/controllers to REAPER_RESOURCE_PATH/Data/helgoboss/realearn/presets/controller (If you built your own presets already, you need to move them! The ones delivered by ReaPack should be moved automatically when doing a ReaPack sync.)
- Added support for main presets (analogously to controller presets)
- Added batch-learning of multiple mappings (new button "Learn many")
- Added FX anchors (analogously to track anchors)
- Added new target FX option "&lt;Focused>" (analogously to track "&lt;Selected>")
- Improved usability by scrolling to newly added/duplicated mapping if necessary
- Improved usability by prompting user for confirmation before switching from no preset to some preset if there are mappings defined already
- Improved usability by also stopping source filter learning when clearing the source filter
- Improved usability disabling all control while learning a target (no more undesired target learning by moving an already assigned control, at least within one ReaLearn instance)
- Fixed bug that caused overscrolling when clicking on "Find in mapping list" button
- Fixed inconsistent feedback processing order (changes behavior of existing feedback transformation formulas if used in combination with source or target interval restrictions, so they might need some adjustment!)
]]></changelog>

                <source platform="win32" type="data" file="helgoboss/realearn/doc/realearn-user-guide.pdf">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-user-guide.pdf</source>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre8/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre7" author="helgoboss" time="2020-12-14T12:00:00Z">
                <changelog><![CDATA[- Added possibility to let unmatched FX input MIDI events through even when using hardware input (the checkbox isn't greyed out anymore)
- Improved accessibility by fixing tab order, default buttons and initial focus (affects mapping panel only because REAPER doesn't seem to support tab control in the actual main FX window)
- Improved consistency by letting program numbers start at 0 (just a visual change)
- Improved versatility by increasing number of conditional-activation parameters to 100
- Improved quality assurance by adding a few integration tests (new developer action)
- Improved usability by making online and offline user guide accessible via context menu (plus some other links)
- Fixed error when choosing non-MSB controller for 14-bit CC sources (now silently converted to MSB controller)
- Fixed "Find in mapping list" not switching mapping compartment
- Fixed "Message: -1 is not a valid value" in a better way (translating negative values to zero instead of ignoring them)
- Fixed REAPER crash when using automation on ReaLearn conditional-activation parameters
- Fixed UI inconsistency by hiding track anchor dropdown if not relevant
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre7/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre6" author="helgoboss" time="2020-12-08T12:00:00Z">
                <changelog><![CDATA[- Added possibility to refer to a track via its name or position (as an alternative to the default of using its unique and stable ID) ← That's called track anchors, a powerful addition, if you ask me!
- Improved consistency by preventing the session ID to become non-unique as result of actively changing it via context menu
- Improved usability by making virtual target the default for new controller mappings
- Improved usability by making most confirmation and alert dialogs modal with respect to the ReaLearn window itself, not REAPER
- Fixed Windows 7 character issues in dropdown menus
- Fixed error message if track could not be found
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre6/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre5" author="helgoboss" time="2020-12-07T12:00:00Z">
                <changelog><![CDATA[- Added Linux build again
- Added two controller presets, downloadable via ReaPack (in this context, controller preset directory has been changed to Data/helgoboss/realearn/controllers)
- Improved usability by printing possible solutions when projection server could not be started
- Improved stability and portability by migrating from web view to opening the projection setup page in the user's browser
- Improved QR code detection results by increasing QR code size
- Fixed "is not a valid unit value" error (happened when reading volume values above the fader limit set in REAPER preferences)
- Fixed "negative MIDI frame offset" error (negative offsets are interpreted as zero now)
- Fixed "Message: assertion failed: Bpm::is_valid(value)" error (could happen when using controllers that send MIDI clock)
- Fixed "Message: -1 is not a valid value" error (caused by unexpected FX parameter change value)
- Fixed header panel context menu on macOS
- Fixed crash on macOS when pressing projection button (by replacing web view with browser)
- Fixed not showing QR code on Windows 7, probably because of old IE version
- Fixed failure when opening presets that don't yet contain activationType
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre5/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.12.0-pre4" author="helgoboss" time="2020-12-03T12:00:00Z">
                <changelog><![CDATA[- Added controller mapping feature (possibility to define controller-specific mappings, virtual sources and virtual targets)
- Added controller projection feature (by using the new ReaLearn Companion app)
- Added indication of scroll position and number of mappings
- Improved usability by rethinking the mapping mode concept (The mapping window section is now called "Tuning" instead of "Mode" because a mapping can now cope with both relative and absolute source values, no matter the mode! It just depends on whatever value type the source emits - relative or absolute values. From now on, the "Mode" just describes how to interpret incoming absolute values. This is a "mostly" backward-compatible change since it changes only behavior of mappings that didn't have an effect anyway till now because source value type and mode didn't match.)
- Improved usability by indicating mappings that are "off" by greying them out
- Improved resource usage by greatly reducing project file size, undo entry size and preset size
- Improve error logging (makes it easier to map debug symbols, on Windows at least)
- Fixed bug that caused initial parameter values to be sometimes ignored in conditional activation
- Fixed scrolling issues when mapping list filtered
- Fixed error message when trying to pick action
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.12.0-pre4/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0" author="helgoboss" time="2020-09-16T12:00:00Z">
                <changelog><![CDATA[- Added feature 'conditional activation' for (de)activating mappings based on parameter values
- Added transport target with proper feedback (play/pause, play/stop, record, repeat)
- Added option to send feedback after each control cycle
- Added possibility to further specify "Out of range" behavior (the new option "Min" is especially useful for mappings where a button sets a target to a specific constant value)
- Improved installation instructions and added controller tips to the documentation
- Improved usability by showing hierarchical folder structure in track dropdown
- Improved usability by asking user for confirmation before removing a mapping
- Improved usability by simplifying mapping window title
- Fixed strange and unreliable feedback if target min is equal to target max
- Fixed bug that caused "FX must have focus" to not work at all with floating windows and work incorrectly when in FX chain
- Fixed action targets reporting wrong character, leading to wrong auto correction behavior
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0-pre2" author="helgoboss" time="2020-09-01T12:00:00Z">
                <changelog><![CDATA[- Added transport target with proper feedback (play/pause, play/stop, record, repeat)
- Added option to send feedback after each control cycle
- Improved usability by showing hierarchical folder structure in track dropdown
- Improved usability by asking user for confirmation before removing a mapping
- Improved usability by simplifying mapping window title
- Fixed action targets reporting wrong character, leading to wrong auto correction behavior
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre2/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.11.0-pre1" author="helgoboss" time="2020-08-28T12:00:00Z">
                <changelog><![CDATA[- Added feature 'conditional activation' for (de)activating mappings based on parameter values
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.11.0-pre1/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0" author="helgoboss" time="2020-08-27T12:00:00Z">
                <changelog><![CDATA[- Added Linux support
- Added target 'Selected track' for navigating within track list
- Added mapping name search
- Added support for non-latin characters (in mapping names and when showing track names)
- Added support for using ReaLearn as monitoring FX
- Added version and build information to UI
- Added possibility to quickly check what a certain knob/fader/encoder/switch actually controls, without actually changing target parameters (implemented by simply making source filter run until pressing 'Stop' and by not filtering unknown sources)
- Added feedback for target 'Track FX preset'
- Added possibility for relative mode to throttle/slow-down relative increments (the 'step count' sliders are now called 'speed', negative values represent throttling)
- Added possibility for absolute and toggle modes to distinguish between short/long button presses ('Length' slider allows you to define press durations on millisecond granularity - obviously works with momentary switches only)
- Added mapping option 'Prevent echo feedback' (good for motorized faders that don't like feedback while being moved)
- Added target 'Track FX all enable' (without feedback)
- Added feedback transformation for relative and toggle mode, too (because feedback is always absolute)
- Added possibility to access current target value in control transformation (initial value of y)
- Added feedback reset logic when source not in use anymore (e.g. sends 'zero' feedback value if mapping removed)
- Added developer action for resolving backtraces that just contain addresses (also stripped debug symbols from Linux release artifact)
- Added option to send MIDI feedback to 'FX output' instead of directly to MIDI hardware device
- Added button 'Log debug info' for printing some debug information on a terminal (not the REAPER console!)
- Improved error handling: Some possible smaller errors/misbehaviors where totally ignored in previous versions and therefore might have gone unnoticed. In this version, ReaLearn will print a bug report if it detects such a smaller error, exactly like it already did before with more serious errors. (ReaLearn follows a fail-fast approach in order to detect errors early instead of letting them introduce subtle and hard-to-analyze bugs.)
- Improved toggle mode by letting Source Min/Max clamp feedback value just like in other modes
- Improved 'Log debug info' by logging to REAPER console instead of terminal
- Improved behavior when using 'Learn source filter': Also indicate if a source has been touched that is not used in any mapping (by showing an empty mapping list)
- Improved UI for action target (now uses REAPER's built-in action picker)
- Improved duplicate naming ('Copy of ...')
- Improved UI by immediately reflecting track name changes
- Improved UI by using actual arrow symbols (macOS and Windows only)
- Improved UI by having better error window if clipboard import is wrong
- Improved UI by instantly updating mapping name and all other values changed via text input field while typing
- Improved feedback by keeping it more in sync with the mapping settings (e.g. also updates while changing target range)
- Improved relative mode by giving the 'step size' / 'step count' (now 'speed') controls an overhaul
- Improved usability by not letting target fields forget their values when switching type
- Included more diagnostic information in error log messages (debug info such as line numbers)
- Made a complete rewrite in Rust programming language
- Published as open source (available on GitHub)
- Fixed logic error after learning target on master track
- Fixed crashes on logic errors while executing VST plug-in callbacks. Now it just reports an error message instead of aborting REAPER.
- Fixed non-working 'Track must be selected' target condition
- Fixed non-moving slider when slider currently focused
- Fixed some FX parameter target bugs which caused ReaLearn to error on particular values
- Fixed another possible 'ghost session' bug (ReaLearn sticking around although already unloaded)
- Fixed non-working FX parameter selection
- Fixed sometimes not working FX parameter learn
- Fixed possible missing learn/feedback notification right after startup
- Fixed possible error message when using -inf dB
- Fixed bug that caused ReaLearn instance to stay around as a ghost even if already removed. That caused surprising issues e.g. complaints about a target parameter not being found which was not used at all.
- Fixed continuous MIDI feedback of automated FX parameter values, track send volume and track send pan. Now fires on real value changes only. It’s still possible that ReaLearn sends more feedback than necessary when having automation. This can happen if there are value changes but they are so small that they don’t have any effect on the feedback MIDI value (because MIDI feedback values have a very low resolution).)
- Fixed some random error messages when using FX parameter target with parameters that report step sizes
- Fixed crashes when removing plug-ins
- Fixed bug that caused feedback and learn not working with master track
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre8" author="helgoboss" time="2020-08-19T12:00:00Z">
                <changelog><![CDATA[- Added mapping option 'Prevent echo feedback' (good for motorized faders that don't like feedback while being moved)
- Improved error handling: Some possible smaller errors/misbehaviors where totally ignored in previous versions and therefore might have gone unnoticed. In this version, ReaLearn will print a bug report if it detects such a smaller error, exactly like it already did before with more serious errors. (ReaLearn follows a fail-fast approach in order to detect errors early instead of letting them introduce subtle and hard-to-analyze bugs.)
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre8/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre7" author="helgoboss" time="2020-07-29T12:00:00Z">
                <changelog><![CDATA[- Added target 'Track FX all enable' (without feedback)
- Added feedback transformation for relative and toggle mode, too (because feedback is always absolute)
- Added possibility to access current target value in control transformation (initial value of y)
- Improved toggle mode by letting Source Min/Max clamp feedback value just like in other modes
- Improved 'Log debug info' by logging to REAPER console instead of terminal
- Fixed logic error after learning target on master track
- Fixed crashes on logic errors while executing VST plug-in callbacks. Now it just reports an error message instead of aborting REAPER.
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre7/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre6" author="helgoboss" time="2020-07-13T12:00:00Z">
                <changelog><![CDATA[- Added feedback reset logic when source not in use anymore (e.g. sends 'zero' feedback value if mapping removed)
- Improved behavior when using 'Learn source filter': Also indicate if a source has been touched that is not used in any mapping (by showing an empty mapping list)
- Fixed non-working 'Track must be selected' target condition
- Fixed non-moving slider when slider currently focused
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre6/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre5" author="helgoboss" time="2020-06-29T12:00:00Z">
                <changelog><![CDATA[- Added developer action for resolving backtraces that just contain addresses (also stripped debug symbols from Linux release artifact)
- Fixed some FX parameter target bugs which caused ReaLearn to error on particular values
- Fixed another possible 'ghost session' bug (ReaLearn sticking around although already unloaded)
- Fixed non-working FX parameter selection
- Fixed sometimes not working FX parameter learn
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre5/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre4" author="helgoboss" time="2020-06-27T12:00:00Z">
                <changelog><![CDATA[- Added option to send MIDI feedback to 'FX output' instead of directly to MIDI hardware device
- Added button 'Log debug info' for printing some debug information on a terminal (not the REAPER console!)
- Fixed possible missing learn/feedback notification right after startup
- Fixed possible error message when using -inf dB
- Fixed bug that caused ReaLearn instance to stay around as a ghost even if already removed. That caused surprising issues e.g. complaints about a target parameter not being found which was not used at all.
- Fixed continuous MIDI feedback of automated FX parameter values, track send volume and track send pan. Now fires on real value changes only. It’s still possible that ReaLearn sends more feedback than necessary when having automation. This can happen if there are value changes but they are so small that they don’t have any effect on the feedback MIDI value (because MIDI feedback values have a very low resolution).)
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre4/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre3" author="helgoboss" time="2020-06-25T12:00:00Z">
                <changelog><![CDATA[- Fixed some random error messages when using FX parameter target with parameters that report step sizes
- Include more diagnostic information in error log messages (debug info such as line numbers)
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre3/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


            <version name="1.10.0-pre2" author="helgoboss" time="2020-06-24T12:00:00Z">
                <changelog><![CDATA[- Made a complete rewrite in Rust programming language
- Published as open source (available on GitHub)
- Added Linux support
- Added target 'Selected track' for navigating within track list
- Added mapping name search
- Added support for non-latin characters (in mapping names and when showing track names)
- Added support for using ReaLearn as monitoring FX
- Added version and build information to UI
- Added possibility to quickly check what a certain knob/fader/encoder/switch actually controls, without actually changing target parameters (implemented by simply making source filter run until pressing 'Stop' and by not filtering unknown sources)
- Added feedback for target 'Track FX preset'
- Added possibility for relative mode to throttle/slow-down relative increments (the 'step count' sliders are now called 'speed', negative values represent throttling)
- Added possibility for absolute and toggle modes to distinguish between short/long button presses ('Length' slider allows you to define press durations on millisecond granularity - obviously works with momentary switches only)
- Improved UI for action target (now uses REAPER's built-in action picker)
- Improved duplicate naming ('Copy of ...')
- Improved UI by immediately reflecting track name changes
- Improved UI by using actual arrow symbols (macOS and Windows only)
- Improved UI by having better error window if clipboard import is wrong
- Improved UI by instantly updating mapping name and all other values changed via text input field while typing
- Improved feedback by keeping it more in sync with the mapping settings (e.g. also updates while changing target range)
- Improved relative mode by giving the 'step size' / 'step count' (now 'speed') controls an overhaul
- Improved usability by not letting target fields forget their values when switching type
- Fixed crashes when removing plug-ins
- Fixed bug that caused feedback and learn not working with master track
]]></changelog>

                <source platform="win32" file="FX/ReaLearn-x86.dll">https://github.com/helgoboss/realearn/releases/download/v1.10.0-pre2/realearn-windows-i686.dll</source>
            </version>

            <metadata>
                <link rel="website">https://www.helgoboss.org/projects/realearn/</link>
                <link rel="donation">https://www.paypal.me/helgoboss</link>
                <link rel="screenshot" href="https://ibb.co/fGsnDnr">Mapping list</link>
                <link rel="screenshot" href="https://ibb.co/qD8PwCV">Mapping detail</link>
                <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 ReaLearn is a VST instrument plug-in which works in REAPER only. Its purpose is to improve REAPER\u8217's MIDI learn capabilities and add MIDI feedback (e.g.\u160?via LEDs and motorized faders). If you frequently need to map MIDI controller elements like knobs or switches to REAPER functions such as FX parameters or actions, ReaLearn might be useful for you.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 REAPER itself has this capability but some useful MIDI control scenarios are quite difficult and time-consuming to achieve with REAPER alone, for example if you want to restrict the controlled target value range. You would need to tinker with things like MIDIToReaControlPath and general purpose MIDI plug-ins. ReaLearn tries to make that much easier by giving you instant and easy access to lots of advanced features out-of-the-box.\par}
}]]></description>
            </metadata>


        </reapack>
    </category>
    <metadata>
        <link rel="website">https://www.helgoboss.org</link>
        <link rel="donation">https://www.paypal.me/helgoboss</link>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Find out more about Helgoboss Projects on its {\field{\*\fldinst{HYPERLINK "https://www.helgoboss.org"}}{\fldrslt{\ul
website
}}}
.\par}
}]]></description>
    </metadata>
</index>